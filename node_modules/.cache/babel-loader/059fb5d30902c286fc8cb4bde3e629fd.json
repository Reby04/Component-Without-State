{"ast":null,"code":"var _jsxFileName = \"/home/vivieb/component_without_state/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Button, Modal } from \"antd\";\nimport { FormApp } from \"./FormApp\"; //Query per prendere i dati dal database\n\nconst GET_PERIOD = gql`\n  query period {\n    periodTypes(scopeGroupId: 20124) {\n      items {\n        id\n        displayName\n        groupId\n        name\n        code\n        title\n        description\n        flat\n        threshold\n        flexible\n        position\n        reportOverride\n        workflowStatus\n      }\n    }\n  }\n`; //Query per rimuovere i dati dal database\n\nconst REMOVE_PERIOD = gql`\n  mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n    deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n  }\n`; //Query per aggiungere dati al Database\n\nconst ADD_PERIOD = gql`\n  mutation($periodType: InputPeriodType!) {\n    createPeriodType(periodType: $periodType) {\n      id\n      displayName\n    }\n  }\n`;\nconst EDIT_PERIOD = gql`\n  mutation($periodTypeId: Long!, $periodType: InputPeriodType!) {\n    updatePeriodType(periodTypeId: $periodTypeId, periodType: $periodType) {\n      id\n    }\n  }\n`; // type modal = {\n//   ModalText: string;\n//   visible: boolean;\n//   confirmLoading: boolean;\n// };\n\nconst App = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    id: 0,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  });\n  const [modal, setModal] = useState({\n    ModalText: \"Content of the modal\",\n    visible: false,\n    confirmLoading: false\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n  console.log(data);\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [editPeriod] = useMutation(EDIT_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n\n  const showModal = () => {\n    setModal({\n      ModalText: \"Content of the modal\",\n      visible: true,\n      confirmLoading: false\n    });\n  };\n\n  const handleFormChange = (name, value) => {\n    setDataForm({ ...dataForm,\n      [name]: value\n    });\n  };\n\n  const onChange = () => {\n    console.log(\"STAMPO IL DATAFORM %O\", dataForm);\n\n    if (dataForm.id > 0) {\n      editPeriod({\n        variables: {\n          periodTypeId: dataForm.id,\n          periodType: {\n            groupId: dataForm.groupId,\n            id: dataForm.id,\n            name: dataForm.name,\n            code: dataForm.code,\n            title: JSON.stringify({\n              en_US: dataForm.title\n            }),\n            description: JSON.stringify({\n              en_US: dataForm.description\n            }),\n            flat: dataForm.flat,\n            threshold: dataForm.threshold,\n            flexible: dataForm.flexible,\n            position: dataForm.position,\n            reportOverride: dataForm.reportOverride,\n            workflowStatus: dataForm.workflowStatus\n          }\n        }\n      });\n    } else {\n      addTodo({\n        variables: {\n          periodType: {\n            groupId: 20128,\n            name: dataForm.name,\n            code: dataForm.code,\n            title: JSON.stringify({\n              en_US: dataForm.title\n            }),\n            description: JSON.stringify({\n              en_US: dataForm.description\n            }),\n            flat: dataForm.flat,\n            threshold: dataForm.threshold,\n            flexible: dataForm.flexible,\n            position: 0,\n            reportOverride: false,\n            workflowStatus: 0\n          }\n        }\n      });\n    }\n\n    setModal({\n      ModalText: \"Content of the modal\",\n      visible: false,\n      confirmLoading: false\n    });\n  };\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Loading ...\");\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"src/App.tsx\"), \" and save to reload.\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Hello\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, data.periodTypes.items.map(value => React.createElement(\"li\", {\n    key: value.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, value.displayName, React.createElement(Button, {\n    onClick: e => {\n      removePeriod({\n        variables: {\n          siteGroupId: 20128,\n          periodTypeIds: value.id\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Remove\"), React.createElement(Button // onClick={showModal}\n  , {\n    onClick: e => {\n      console.log(\"Ho cliccato Edit %o\", value);\n      setDataForm({\n        groupId: value.groupId,\n        id: value.id,\n        name: value.name,\n        code: value.code,\n        title: JSON.parse(value.title).en_US,\n        description: JSON.parse(value.description).en_US,\n        flat: value.flat,\n        threshold: value.threshold,\n        flexible: value.flexible,\n        position: value.position,\n        reportOverride: value.reportOverride,\n        workflowStatus: value.workflowStatus\n      });\n      showModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(Modal, {\n    title: \"Title\",\n    visible: modal.visible,\n    onOk: onChange //confirmLoading={confirmLoading}\n    // onCancel={handleCancel}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(FormApp, Object.assign({\n    onSubmit: onChange,\n    handleFormChange: handleFormChange // name={dataForm.name}\n    // code={dataForm.code}\n    // title={dataForm.title}\n    // description={dataForm.description}\n    // flat={dataForm.flat}\n    // threshold={dataForm.threshold}\n    // flexible={dataForm.flexible}\n    // position={dataForm.position}\n    // reportOverride={dataForm.reportOverride}\n    // workflowStatus={dataForm.workflowStatus}\n\n  }, dataForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    type: \"primary\",\n    onClick: e => {\n      onChange();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Aggiungi\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"Learn React\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/vivieb/component_without_state/src/App.tsx"],"names":["React","useState","useQuery","useMutation","gql","Button","Modal","FormApp","GET_PERIOD","REMOVE_PERIOD","ADD_PERIOD","EDIT_PERIOD","App","dataForm","setDataForm","groupId","id","name","code","title","description","flat","threshold","flexible","position","reportOverride","workflowStatus","modal","setModal","ModalText","visible","confirmLoading","loading","error","data","fetchPolicy","console","log","removePeriod","refetchQueries","addTodo","editPeriod","showModal","handleFormChange","value","onChange","variables","periodTypeId","periodType","JSON","stringify","en_US","logo","periodTypes","items","map","displayName","e","siteGroupId","periodTypeIds","parse"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Button, Modal } from \"antd\";\nimport { FormApp } from \"./FormApp\";\n\n//Query per prendere i dati dal database\nconst GET_PERIOD = gql`\n  query period {\n    periodTypes(scopeGroupId: 20124) {\n      items {\n        id\n        displayName\n        groupId\n        name\n        code\n        title\n        description\n        flat\n        threshold\n        flexible\n        position\n        reportOverride\n        workflowStatus\n      }\n    }\n  }\n`;\n\n//Query per rimuovere i dati dal database\nconst REMOVE_PERIOD = gql`\n  mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n    deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n  }\n`;\n//Query per aggiungere dati al Database\nconst ADD_PERIOD = gql`\n  mutation($periodType: InputPeriodType!) {\n    createPeriodType(periodType: $periodType) {\n      id\n      displayName\n    }\n  }\n`;\n\nconst EDIT_PERIOD = gql`\n  mutation($periodTypeId: Long!, $periodType: InputPeriodType!) {\n    updatePeriodType(periodTypeId: $periodTypeId, periodType: $periodType) {\n      id\n    }\n  }\n`;\n// type modal = {\n//   ModalText: string;\n//   visible: boolean;\n//   confirmLoading: boolean;\n// };\ninterface Props {\n  // modal: modal;\n}\n\nconst App: React.FC<Props> = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    id: 0,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  });\n\n  const [modal, setModal] = useState({\n    ModalText: \"Content of the modal\",\n    visible: false,\n    confirmLoading: false\n  });\n\n  const { loading, error, data } = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n  console.log(data);\n\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n\n  const [editPeriod] = useMutation(EDIT_PERIOD, { refetchQueries: [\"period\"] });\n\n  const showModal = () => {\n    setModal({\n      ModalText: \"Content of the modal\",\n      visible: true,\n      confirmLoading: false\n    });\n  };\n\n  const handleFormChange = (name: string, value: any) => {\n    setDataForm({\n      ...dataForm,\n      [name]: value\n    });\n  };\n\n  const onChange = () => {\n    console.log(\"STAMPO IL DATAFORM %O\", dataForm);\n    if (dataForm.id > 0) {\n      editPeriod({\n        variables: {\n          periodTypeId: dataForm.id,\n          periodType: {\n            groupId: dataForm.groupId,\n            id: dataForm.id,\n            name: dataForm.name,\n            code: dataForm.code,\n            title: JSON.stringify({ en_US: dataForm.title }),\n            description: JSON.stringify({ en_US: dataForm.description }),\n            flat: dataForm.flat,\n            threshold: dataForm.threshold,\n            flexible: dataForm.flexible,\n            position: dataForm.position,\n            reportOverride: dataForm.reportOverride,\n            workflowStatus: dataForm.workflowStatus\n          }\n        }\n      });\n    } else {\n      addTodo({\n        variables: {\n          periodType: {\n            groupId: 20128,\n            name: dataForm.name,\n            code: dataForm.code,\n            title: JSON.stringify({ en_US: dataForm.title }),\n            description: JSON.stringify({ en_US: dataForm.description }),\n            flat: dataForm.flat,\n            threshold: dataForm.threshold,\n            flexible: dataForm.flexible,\n            position: 0,\n            reportOverride: false,\n            workflowStatus: 0\n          }\n        }\n      });\n    }\n\n    setModal({\n      ModalText: \"Content of the modal\",\n      visible: false,\n      confirmLoading: false\n    });\n  };\n\n  if (loading) return <p>Loading ...</p>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <h3>\n          Hello\n          <ul>\n            {data.periodTypes.items.map((value: any) => (\n              <li key={value.id}>\n                {value.displayName}\n                <Button\n                  onClick={(e: any) => {\n                    removePeriod({\n                      variables: {\n                        siteGroupId: 20128,\n                        periodTypeIds: value.id\n                      }\n                    });\n                  }}\n                >\n                  Remove\n                </Button>\n                <Button\n                  // onClick={showModal}\n                  onClick={(e: any) => {\n                    console.log(\"Ho cliccato Edit %o\", value);\n                    setDataForm({\n                      groupId: value.groupId,\n                      id: value.id,\n                      name: value.name,\n                      code: value.code,\n                      title: JSON.parse(value.title).en_US,\n                      description: JSON.parse(value.description).en_US,\n                      flat: value.flat,\n                      threshold: value.threshold,\n                      flexible: value.flexible,\n                      position: value.position,\n                      reportOverride: value.reportOverride,\n                      workflowStatus: value.workflowStatus\n                    });\n                    showModal();\n                  }}\n                >\n                  Edit\n                </Button>\n              </li>\n            ))}\n          </ul>\n          <Modal\n            title=\"Title\"\n            visible={modal.visible}\n            onOk={onChange}\n            //confirmLoading={confirmLoading}\n            // onCancel={handleCancel}\n          >\n            <FormApp\n              onSubmit={onChange}\n              handleFormChange={handleFormChange}\n              // name={dataForm.name}\n              // code={dataForm.code}\n              // title={dataForm.title}\n              // description={dataForm.description}\n              // flat={dataForm.flat}\n              // threshold={dataForm.threshold}\n              // flexible={dataForm.flexible}\n\n              // position={dataForm.position}\n              // reportOverride={dataForm.reportOverride}\n              // workflowStatus={dataForm.workflowStatus}\n              {...dataForm}\n            ></FormApp>\n          </Modal>\n          {/* <FormApp\n            onSubmit={onChange}\n            dataForm={dataForm}\n            setDataForm={setDataForm}\n          ></FormApp> */}\n        </h3>\n\n        <Button\n          type=\"primary\"\n          onClick={(e: any) => {\n            onChange();\n          }}\n        >\n          Aggiungi\n        </Button>\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}